<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 2011 André Rouél
  
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
  
    http://www.apache.org/licenses/LICENSE-2.0
  
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<parent>
		<relativePath>../</relativePath>
		<groupId>net.sf.jacclog</groupId>
		<artifactId>net.sf.jacclog</artifactId>
		<version>0.1.0-SNAPSHOT</version>
	</parent>

	<properties>
		<bundle.symbolicName>net.sf.jacclog.logformat</bundle.symbolicName>
		<bundle.namespace>net.sf.jacclog.logformat</bundle.namespace>
	</properties>

	<modelVersion>4.0.0</modelVersion>
	<artifactId>net.sf.jacclog.logformat</artifactId>

	<name>Jacclog :: LogFormat</name>
	<description>The LogFormat bundle provides tools to interpret user-defined formats of access logs. ANTLR will be used to parse a format like "%h %l %u %t %r %>s %b %{Referer}i %{User-agent}i %0 %0 %0".</description>

	<packaging>bundle</packaging>

	<dependencies>

		<!-- ANTLR -->
		<dependency>
			<groupId>org.antlr</groupId>
			<artifactId>antlr</artifactId>
		</dependency>
		<dependency>
			<groupId>org.antlr</groupId>
			<artifactId>antlr-runtime</artifactId>
			<scope>compile</scope>
		</dependency>

		<!-- Logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Unit testing -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.antlr</groupId>
				<artifactId>antlr3-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>antlr</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- the following instructions build a simple set of public/private classes into an OSGi bundle -->
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<configuration>
					<instructions>
						<Bundle-SymbolicName>${bundle.symbolicName}</Bundle-SymbolicName>
						<Bundle-Version>${project.version}</Bundle-Version>
						<!-- assume public classes are in the top package, and private classes are under ".internal" -->
						<Export-Package>${bundle.namespace}.*;version="${project.version}"</Export-Package>
						<Import-Package>!org.antlr.*,*</Import-Package>

						<!-- embedding ANTLR -->
						<Embed-Dependency>antlr-runtime;scope=compile|runtime;inline=true</Embed-Dependency>
						<Embed-Transitive>true</Embed-Transitive>

						<!-- each module can override these defaults in their osgi.bnd file -->
						<_include>-osgi.bnd</_include>
					</instructions>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<configuration>
					<reportPlugins>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-project-info-reports-plugin</artifactId>
							<reports>
								<report>dependencies</report>
								<report>index</report>
								<report>issue-tracking</report>
								<report>license</report>
								<report>plugins</report>
								<report>project-team</report>
								<report>scm</report>
								<report>summary</report>
							</reports>
							<configuration>
								<dependencyDetailsEnabled>true</dependencyDetailsEnabled>
								<dependencyLocationsEnabled>true</dependencyLocationsEnabled>
							</configuration>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-javadoc-plugin</artifactId>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-jxr-plugin</artifactId>
						</plugin>
					</reportPlugins>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
